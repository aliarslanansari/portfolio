{"version":3,"sources":["utils/styleUtils.js","components/MobileNavbar/index.js","components/Navbar/index.js","components/PageWrapper/index.js","images/bg-pattern.png","containers/HomePage/index.js","App.js","reportWebVitals.js","index.js"],"names":["colors","getClickableLinkStyle","css","containerPadding","isMobile","GlobalStyle","createGlobalStyle","StyledMenu","styled","nav","open","MenuItem","li","Menu","href","StyledBurger","button","Burger","setOpen","onClick","MobileNavbar","navigationMenuOptions","React","useState","Title","Typography","StyledNavbar","props","LogoText","ul","Navbar","Wrapper","main","background","PageWrapper","children","useMediaQuery","maxWidth","StyledTextName","span","StyledText","CustomSubtitle","p","CustomTitle","h1","HomePage","PatternBG","xs","sm","md","lg","xl","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0d22d15.chunk.js","sourcesContent":["import { createGlobalStyle, css } from 'styled-components'\r\n\r\nexport const colors = {\r\n  backgroungColor: '#3355ff',\r\n}\r\n\r\nexport const getClickableLinkStyle = () => {\r\n  return css`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: max-content;\r\n    &:after {\r\n      content: '';\r\n      position: absolute;\r\n      width: 100%;\r\n      transform: scaleX(0);\r\n      height: 1.5px;\r\n      bottom: 0;\r\n      left: 0;\r\n      background-color: ${colors.backgroungColor};\r\n      transform-origin: bottom right;\r\n      transition: transform 0.25s ease-out;\r\n    }\r\n    &:hover:after {\r\n      transform: scaleX(1);\r\n      transform-origin: bottom left;\r\n    }\r\n  `\r\n}\r\n\r\nexport const containerPadding = (isMobile) => {\r\n  return css`\r\n    padding: ${isMobile ? '0 1.5rem 0 1.5rem' : '0 10vw 0 10vw'};\r\n  `\r\n}\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    background-color: #F9F9FB;\r\n    font-family: 'Segoe UI', sans-serif;\r\n  }\r\n`\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { getClickableLinkStyle } from '../../utils/styleUtils'\r\n\r\nconst StyledMenu = styled.nav`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  box-shadow: -1px 0px 4px rgba(0, 0, 0, 0.05);\r\n  background: #fff;\r\n  transform: ${({ open }) => (open ? 'scaleX(100%)' : 'scaleX(0)')};\r\n  height: 100vh;\r\n  width: 15rem;\r\n  text-align: right;\r\n  padding: 0 2rem 0 2rem;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  transition: transform 0.3s ease-in-out;\r\n\r\n  @media (max-width: 576px) {\r\n    width: 100%;\r\n    padding: 0;\r\n  }\r\n\r\n  a {\r\n    font-size: 2rem;\r\n    text-transform: uppercase;\r\n    padding: 2rem 0;\r\n    font-weight: bold;\r\n    letter-spacing: 0.5rem;\r\n    color: #0d0c1d;\r\n    text-decoration: none;\r\n    transition: color 0.3s linear;\r\n\r\n    @media (max-width: 576px) {\r\n      font-size: 1.5rem;\r\n      text-align: center;\r\n    }\r\n\r\n    &:hover {\r\n      color: #343078;\r\n    }\r\n  }\r\n`\r\n\r\nconst MenuItem = styled.li`\r\n  font-size: 1.5rem;\r\n  color: #3355ff;\r\n  margin: 1rem 5rem;\r\n  ${getClickableLinkStyle()}\r\n  @media (max-width: 576px) {\r\n    /* text-align: center; */\r\n  }\r\n`\r\nconst Menu = ({ open }) => {\r\n  return (\r\n    <StyledMenu open={open}>\r\n      <MenuItem href='/'>Blog</MenuItem>\r\n      <MenuItem href='/'>Project</MenuItem>\r\n      <MenuItem href='/'>About</MenuItem>\r\n      <MenuItem href='/'>Contact</MenuItem>\r\n    </StyledMenu>\r\n  )\r\n}\r\n\r\nconst StyledBurger = styled.button`\r\n  position: absolute;\r\n  top: 1rem;\r\n  right: 2rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  width: 2rem;\r\n  height: 2rem;\r\n  background: transparent;\r\n  border: none;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  z-index: 10;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n\r\n  div {\r\n    width: 2rem;\r\n    height: 0.25rem;\r\n    background: ${({ open }) => (open ? 'black' : 'black')};\r\n    border-radius: 10px;\r\n    transition: all 0.3s linear;\r\n    position: relative;\r\n    transform-origin: 1px;\r\n\r\n    :first-child {\r\n      transform: ${({ open }) => (open ? 'rotate(45deg)' : 'rotate(0)')};\r\n    }\r\n\r\n    :nth-child(2) {\r\n      opacity: ${({ open }) => (open ? '0' : '1')};\r\n      transform: ${({ open }) => (open ? 'translateX(20px)' : 'translateX(0)')};\r\n    }\r\n\r\n    :nth-child(3) {\r\n      transform: ${({ open }) => (open ? 'rotate(-45deg)' : 'rotate(0)')};\r\n    }\r\n  }\r\n`\r\n\r\nconst Burger = ({ open, setOpen }) => {\r\n  return (\r\n    <StyledBurger open={open} onClick={() => setOpen(!open)}>\r\n      <div />\r\n      <div />\r\n      <div />\r\n    </StyledBurger>\r\n  )\r\n}\r\n\r\nconst MobileNavbar = ({ navigationMenuOptions }) => {\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  //   const currentURL = useLocation()\r\n  //   const history = useHistory()\r\n\r\n  return (\r\n    <>\r\n      <Burger open={open} setOpen={setOpen} />\r\n      <Menu open={open} setOpen={setOpen} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MobileNavbar\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { containerPadding, getClickableLinkStyle } from '../../utils/styleUtils'\r\nimport MobileNavbar from '../MobileNavbar'\r\nimport { Typography } from 'antd'\r\n\r\nconst { Title } = Typography\r\n\r\nconst StyledNavbar = styled.nav`\r\n  user-select: none;\r\n  background-color: white;\r\n  z-index: 900;\r\n  height: 4rem;\r\n  display: flex;\r\n  ${(props) => containerPadding(props.isMobile)}\r\n  position: sticky;\r\n  top: 0;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: #ffffff;\r\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.04);\r\n`\r\nconst LogoText = styled(Title)`\r\n  margin: auto 0;\r\n  font-weight: 400 !important;\r\n  cursor: pointer;\r\n  font-family: 'DM Serif Text';\r\n  font-size: 2rem !important;\r\n  white-space: nowrap;\r\n  align-self: center;\r\n`\r\n\r\nconst Menu = styled.ul`\r\n  list-style-type: none;\r\n  color: #3355ff;\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst MenuItem = styled.li`\r\n  font-size: 1.2rem;\r\n  color: #3355ff;\r\n  cursor: pointer;\r\n  margin-left: 3rem;\r\n  ${getClickableLinkStyle()}\r\n`\r\n\r\nconst Navbar = ({ isMobile }) => {\r\n  return (\r\n    <StyledNavbar isMobile={isMobile}>\r\n      <LogoText>Ali Arslan</LogoText>\r\n      {isMobile ? (\r\n        <MobileNavbar />\r\n      ) : (\r\n        <Menu>\r\n          <MenuItem>Blog</MenuItem>\r\n          <MenuItem>Project</MenuItem>\r\n          <MenuItem>About</MenuItem>\r\n          <MenuItem>Contact</MenuItem>\r\n        </Menu>\r\n      )}\r\n    </StyledNavbar>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import { useMediaQuery } from 'react-responsive'\r\nimport React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { containerPadding } from '../../utils/styleUtils'\r\n\r\nconst Wrapper = styled.main`\r\n  ${(props) => containerPadding(props.isMobile)}\r\n  ${(props) =>\r\n    props.background &&\r\n    css`\r\n      background-image: url(${props.background});\r\n    `}\r\n`\r\n\r\nconst PageWrapper = ({ children, background }) => {\r\n  const isMobile = useMediaQuery({ maxWidth: 700 })\r\n  return (\r\n    <Wrapper background={background} isMobile={isMobile}>\r\n      {children}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageWrapper\r\n","export default __webpack_public_path__ + \"static/media/bg-pattern.e0019f74.png\";","import React from 'react'\r\nimport PageWrapper from '../../components/PageWrapper'\r\nimport { Row, Col } from 'antd'\r\nimport styled from 'styled-components'\r\nimport PatternBG from '../../images/bg-pattern.png'\r\n\r\nconst StyledTextName = styled.span`\r\n  font-family: DM Serif Text;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 4rem;\r\n  align-items: center;\r\n  letter-spacing: 0.05em;\r\n\r\n  color: #3355ff;\r\n  text-shadow: 3px 2px 0px #bdc8fc;\r\n`\r\n\r\nconst StyledText = styled.span`\r\n  font-family: DM Serif Text;\r\n  text-shadow: 0.03em 0.03em rgb(51 85 255 / 30%);\r\n  font-style: normal;\r\n  font-size: 4rem;\r\n  line-height: 0px;\r\n  align-items: center;\r\n  /* text-shadow: 3px 2px 0px #bdc8fc; */\r\n  letter-spacing: 0.04em;\r\n  color: #bdc8fc;\r\n  font-weight: 400;\r\n  text-shadow: 0.03em 0.03em rgb(51 85 255 / 30%);\r\n  -webkit-font-smoothing: antialiased;\r\n  -webkit-text-stroke: 1px #35f;\r\n  -webkit-text-fill-color: transparent;\r\n`\r\n\r\nconst CustomSubtitle = styled.p`\r\n  font-family: Segoe UI;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 1.5rem;\r\n  line-height: 2rem;\r\n  color: #000000;\r\n`\r\n\r\nconst CustomTitle = styled.h1`\r\n  margin-top: 4rem;\r\n`\r\n\r\nconst HomePage = () => {\r\n  return (\r\n    <PageWrapper background={PatternBG}>\r\n      <Row>\r\n        <Col xs={24} sm={24} md={14} lg={14} xl={14}>\r\n          <CustomTitle>\r\n            <StyledText> Hi, I'm</StyledText>\r\n            <StyledTextName> Ali Arslan</StyledTextName>\r\n          </CustomTitle>\r\n          <CustomSubtitle>\r\n            I’m a developer, I enjoy building web apps in React and Nextjs, I\r\n            love discussing about web performance and serverless architecture,\r\n            teaching others to code and organising events like hackathons.\r\n          </CustomSubtitle>\r\n        </Col>\r\n        <Col xs={24} sm={24} md={10} lg={10} xl={10}>\r\n          Hello\r\n        </Col>\r\n      </Row>\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import { useMediaQuery } from 'react-responsive'\nimport './App.css'\nimport Navbar from './components/Navbar/index'\nimport HomePage from './containers/HomePage'\nimport { GlobalStyle } from './utils/styleUtils'\n\nfunction App() {\n  const isMobile = useMediaQuery({ maxWidth: 700 })\n\n  return (\n    <>\n      <GlobalStyle />\n      <Navbar isMobile={isMobile} />\n      <HomePage />\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}