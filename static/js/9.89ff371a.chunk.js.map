{"version":3,"sources":["components/ProjectCard/style.js","components/ProjectCard/index.js","containers/ProjectPage/index.js","components/PageWrapper/styles.js","components/PageWrapper/index.js","data.js","containers/BlogsPage/styles.js"],"names":["ProjectTitle","styled","a","ProjectImage","img","ProjectMetaContainer","div","ProjectContainer","ProjectDate","h4","ProjectDescription","p","CustomProjectLink","getClickableLinkStyle","ProjectCard","projectTitle","title","time","description","link","code","isHome","onProjectCardClicked","ctaLabel","location","mixpanel","track","src","alt","style","marginTop","onClick","href","target","rel","length","StyledCol","Col","CustomRouterLink","Link","ProjectPage","showAll","useEffect","projects","projectList","slice","PageWrapper","bottomMargin","gutter","map","project","xs","sm","md","lg","xl","display","justifyContent","to","Wrapper","section","props","containerPadding","isMobile","topMargin","css","background","children","useMediaQuery","maxWidth","blogList","readtime","StyledTextName","span","StyledText","CustomTitle","h1"],"mappings":"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","file":"static/js/9.89ff371a.chunk.js","sourcesContent":["import styled from 'styled-components'\r\nimport { getClickableLinkStyle } from '../../utils/styleUtils'\r\n\r\nexport const ProjectTitle = styled.a`\r\n  font-family: DM Serif Text;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 1.5rem;\r\n  line-height: 1.5rem;\r\n  text-decoration-line: underline;\r\n  color: #3355ff;\r\n  &:hover {\r\n    color: #3355ff;\r\n  }\r\n`\r\nexport const ProjectImage = styled.img`\r\n  width: 100%;\r\n  border-radius: 0.5rem;\r\n  height: 13rem;\r\n`\r\nexport const ProjectMetaContainer = styled.div`\r\n  margin-top: -2rem;\r\n  border: 1px solid rgba(51, 85, 255, 0.3);\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 0.1rem 0.5rem 0rem 0.5rem;\r\n  background: #f9f9fb;\r\n  border-radius: 0.5rem;\r\n`\r\nexport const ProjectContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  border-radius: 0.5rem;\r\n`\r\n\r\nexport const ProjectDate = styled.h4`\r\n  font-family: Segoe UI;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 1rem;\r\n  display: inline-block;\r\n  color: #a1a1a2;\r\n  margin-left: 1rem;\r\n`\r\n\r\nexport const ProjectDescription = styled.p`\r\n  font-family: Segoe UI;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 1rem;\r\n  color: rgba(0, 0, 0, 0.87);\r\n`\r\n\r\nexport const CustomProjectLink = styled.p`\r\n  align-self: flex-end;\r\n  font-family: Segoe UI;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-size: 1.1rem;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  @media (max-width: 1200px) {\r\n    /* padding: 0 5rem 0 5rem; */\r\n    width: 50%;\r\n  }\r\n  @media (max-width: 1024px) {\r\n    /* padding: 0 3rem 0 3rem; */\r\n    width: 70%;\r\n  }\r\n  @media (min-width: 1201px) {\r\n    /* padding: 0 15rem 0 15rem; */\r\n    width: 60%;\r\n  }\r\n  @media (max-width: 520px) {\r\n    /* padding: 0 1.5rem 0 1.5rem; */\r\n    width: 80%;\r\n  }\r\n  & > a {\r\n    text-decoration: none;\r\n    color: #3355ff;\r\n    &:hover {\r\n      color: #3355ff;\r\n    }\r\n    ${getClickableLinkStyle()}\r\n  }\r\n`\r\n","import React from \"react\";\r\nimport {\r\n  CustomProjectLink,\r\n  ProjectContainer,\r\n  ProjectDate,\r\n  ProjectDescription,\r\n  ProjectImage,\r\n  ProjectMetaContainer,\r\n  ProjectTitle,\r\n} from \"./style\";\r\nimport Ellipsis from \"ant-design-pro/lib/Ellipsis\";\r\nimport mixpanel from \"mixpanel-browser\";\r\n\r\nconst ProjectCard = ({\r\n  title: projectTitle,\r\n  time,\r\n  description,\r\n  link,\r\n  code,\r\n  img,\r\n  isHome,\r\n}) => {\r\n  const onProjectCardClicked =\r\n    (ctaLabel = \"CODE\") =>\r\n    () => {\r\n      let location = \"HOME\";\r\n      if (!isHome) {\r\n        location = \"PROJECTPAGE\";\r\n      }\r\n      mixpanel.track(`${location}_PROJECT_CARD_${ctaLabel}_CLICKED`, {\r\n        projectTitle,\r\n      });\r\n    };\r\n\r\n  return (\r\n    <ProjectContainer>\r\n      <ProjectImage src={img} alt=\"React Portals\" />\r\n      <ProjectMetaContainer>\r\n        <div style={{ marginTop: \"0.5rem\" }}>\r\n          <ProjectTitle\r\n            onClick={onProjectCardClicked(\"TITLE\")}\r\n            href={code}\r\n            target=\"_blank\"\r\n            rel=\"noreferrer\"\r\n          >\r\n            {projectTitle}\r\n          </ProjectTitle>\r\n          <ProjectDate>{`â€” ${time}`}</ProjectDate>\r\n        </div>\r\n        <ProjectDescription>\r\n          <Ellipsis length={130}>{description}</Ellipsis>\r\n        </ProjectDescription>\r\n        <CustomProjectLink>\r\n          <a\r\n            href={code}\r\n            rel=\"noreferrer\"\r\n            target=\"_blank\"\r\n            onClick={onProjectCardClicked(\"CODE\")}\r\n          >\r\n            Github\r\n          </a>\r\n          <a\r\n            href={link}\r\n            rel=\"noreferrer\"\r\n            target=\"_blank\"\r\n            onClick={onProjectCardClicked(\"DEMO\")}\r\n          >\r\n            Live Demo\r\n          </a>\r\n        </CustomProjectLink>\r\n      </ProjectMetaContainer>\r\n    </ProjectContainer>\r\n  );\r\n};\r\n\r\nexport default ProjectCard;\r\n","import { Col, Row } from \"antd/es/grid\";\r\nimport mixpanel from \"mixpanel-browser\";\r\nimport React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport PageWrapper from \"../../components/PageWrapper\";\r\nimport ProjectCard from \"../../components/ProjectCard\";\r\nimport { projectList } from \"../../data\";\r\nimport { getClickableLinkStyle } from \"../../utils/styleUtils\";\r\nimport { CustomTitle, StyledText, StyledTextName } from \"../BlogsPage/styles\";\r\n\r\nconst StyledCol = styled(Col)`\r\n  margin-bottom: 1rem;\r\n`;\r\nconst CustomRouterLink = styled(Link)`\r\n  ${getClickableLinkStyle()}\r\n  color: #3355ff;\r\n  &:hover {\r\n    color: #3355ff;\r\n  }\r\n`;\r\nconst ProjectPage = ({ showAll, isHome }) => {\r\n\r\n  useEffect(() => {\r\n    if(!isHome){\r\n      mixpanel.track('HOME_PAGE_VISITED')\r\n    }\r\n  }, [isHome])\r\n\r\n  const seeMoreProjectClicked = () => {\r\n    if (isHome) {\r\n      mixpanel.track(\"HOME_SEE_MORE_PROJECT_CLICKED\");\r\n    } else {\r\n      mixpanel.track(\"PROJECTPAGE_SEE_MORE_PROJECT_CLICKED\");\r\n    }\r\n  };\r\n\r\n  const projects = showAll ? projectList : projectList.slice(0, 2);\r\n\r\n  return (\r\n    <PageWrapper bottomMargin={\"4rem\"}>\r\n      {showAll && (\r\n        <CustomTitle>\r\n          <StyledText> My </StyledText>\r\n          <StyledTextName> Projects</StyledTextName>\r\n        </CustomTitle>\r\n      )}\r\n      <Row gutter={16}>\r\n        {projects.map((project) => (\r\n          <StyledCol\r\n            xs={24}\r\n            key={project.title}\r\n            sm={24}\r\n            md={12}\r\n            lg={12}\r\n            xl={12}\r\n          >\r\n            <ProjectCard isHome={isHome} {...project} />\r\n          </StyledCol>\r\n        ))}\r\n      </Row>\r\n      {!showAll && (\r\n        <Row>\r\n          <Col xs={24} sm={24} md={12} lg={12} xl={12}></Col>\r\n          <Col\r\n            xs={24}\r\n            sm={24}\r\n            md={12}\r\n            lg={12}\r\n            xl={12}\r\n            style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n          >\r\n            <CustomRouterLink to=\"/project\" onClick={seeMoreProjectClicked}>\r\n              See more projects\r\n            </CustomRouterLink>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </PageWrapper>\r\n  );\r\n};\r\n\r\nexport default ProjectPage;\r\n","import styled, { css } from 'styled-components'\r\nimport { containerPadding } from '../../utils/styleUtils'\r\n\r\nexport const Wrapper = styled.section`\r\n  width: 100%;\r\n  ${(props) => containerPadding(props.isMobile)}\r\n  ${(props) =>\r\n    props.topMargin &&\r\n    css`\r\n      margin-top: ${props.topMargin};\r\n    `} \r\n  ${(props) =>\r\n    props.bottomMargin &&\r\n    css`\r\n      margin-bottom: ${props.bottomMargin};\r\n    `}\r\n  ${(props) =>\r\n    props.background &&\r\n    css`\r\n      background-image: url(${props.background});\r\n      background-position: bottom;\r\n    `}\r\n`\r\n","import { useMediaQuery } from 'react-responsive'\r\nimport React from 'react'\r\nimport { Wrapper } from './styles'\r\n\r\nconst PageWrapper = ({\r\n  style,\r\n  children,\r\n  background,\r\n  topMargin,\r\n  bottomMargin,\r\n}) => {\r\n  const isMobile = useMediaQuery({ maxWidth: 700 })\r\n  return (\r\n    <Wrapper\r\n      style={style}\r\n      background={background}\r\n      isMobile={isMobile}\r\n      topMargin={topMargin}\r\n      bottomMargin={bottomMargin}>\r\n      {children}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageWrapper\r\n","export const blogList = [\r\n  {\r\n    title: 'Learn React Portals like a PRO.',\r\n    time: 'Aug 2, 2021',\r\n    readtime: '4 minute read',\r\n    description:\r\n      'Learn React Portals, why do we need Portals, and learn how to implement it.',\r\n    link: 'https://blog.aliarslan.in/react-portals',\r\n  },\r\n  {\r\n    title: 'Why use Typescript over Javascript?',\r\n    time: 'Aug 30, 2021',\r\n    readtime: '3 minute read',\r\n    description:\r\n      'The goal of TypeScript is to help catch mistakes early through a type system and to make JavaScript development more efficient.',\r\n    link: 'https://blog.aliarslan.in/why-use-typescript-over-javascript',\r\n  },\r\n]\r\n\r\nexport const projectList = [\r\n  {\r\n    title: 'DEV Resources',\r\n    time: 'May 2021',\r\n    description:\r\n      'Dev Resources web app built using React/Typescript, Apollo Client, AWS AppSync, redux/redux-saga for state management.',\r\n    link: 'https://dev-resources-app.vercel.app/',\r\n    code: 'https://github.com/aliarslanansari/dev-resources-app',\r\n    img: 'https://raw.githubusercontent.com/aliarslanansari/dev-resources-app/master/dev-resources-app.PNG',\r\n  },\r\n  {\r\n    title: 'DEV Connector',\r\n    time: 'June 2021',\r\n    description:\r\n      'Social Media Platform for Devs build using MERN Stack and redux for state management, where developers can share and connect.',\r\n    link: 'https://dev-connector-wheat.vercel.app/',\r\n    code: 'https://github.com/aliarslanansari/DevConnector',\r\n    img: 'https://raw.githubusercontent.com/aliarslanansari/DevConnector/master/snapshot.PNG',\r\n  },\r\n  {\r\n    title: 'Auction Service Backend',\r\n    time: 'June 2021',\r\n    description:\r\n      'Build Serverless on serverless architecture using AWS services like lambda, SNS, SES, S3, DynamoDB.',\r\n    link: 'https://www.postman.com/collections/2f89d7ac1b9a92fabb73',\r\n    code: 'https://github.com/aliarslanansari/auction-service-serverless',\r\n    img: 'https://raw.githubusercontent.com/aliarslanansari/auction-service-serverless/master/auction-service-snapshot.png',\r\n  },\r\n  {\r\n    title: 'Restaurant Search App',\r\n    time: 'May  2020',\r\n    description:\r\n      'Restaurant-food search app built using React-Native, which fetches data from Zomato Search API.',\r\n    link: 'https://snack.expo.dev/@aliarslanansari/food-restaurant-search-react-native',\r\n    code: 'https://github.com/aliarslanansari/food-restaurant-search-react-native',\r\n    img: 'https://raw.githubusercontent.com/aliarslanansari/food-restaurant-search-react-native/master/food-app-snapshot.png',\r\n  },\r\n]\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledTextName = styled.span`\r\n  font-family: DM Serif Text;\r\n  font-style: normal;\r\n  display: inline-block;\r\n  font-weight: normal;\r\n  font-size: 4rem;\r\n  align-items: center;\r\n  letter-spacing: 0.05em;\r\n  color: #3355ff;\r\n  text-shadow: 3px 2px 0px #bdc8fc;\r\n`\r\n\r\nexport const StyledText = styled.span`\r\n  margin-right: 1rem;\r\n  display: inline-block;\r\n  font-family: DM Serif Text;\r\n  text-shadow: 0.03em 0.03em rgb(51 85 255 / 30%);\r\n  font-style: normal;\r\n  font-size: 4rem;\r\n  line-height: 0px;\r\n  align-items: center;\r\n  /* text-shadow: 3px 2px 0px #bdc8fc; */\r\n  letter-spacing: 0.04em;\r\n  color: #bdc8fc;\r\n  font-weight: 400;\r\n  text-shadow: 0.03em 0.03em rgb(51 85 255 / 30%);\r\n  -webkit-font-smoothing: antialiased;\r\n  -webkit-text-stroke: 1px #35f;\r\n  -webkit-text-fill-color: transparent;\r\n`\r\n\r\nexport const CustomTitle = styled.h1`\r\n  margin-top: 4rem;\r\n`\r\n"],"sourceRoot":""}